/*
 * alertmanager
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct EventSchema {
    /// Event souce
    #[serde(rename = "client_source")]
    pub client_source: String,
    /// Client uuid. This is the id defined by client app
    #[serde(rename = "client_uuid")]
    pub client_uuid: String,
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    /// Event data
    #[serde(rename = "data")]
    pub data: serde_json::Value,
    /// Event type
    #[serde(rename = "event_type")]
    pub event_type: String,
    /// Id
    #[serde(rename = "id")]
    pub id: String,
    /// Event labels
    #[serde(rename = "labels")]
    pub labels: serde_json::Value,
    /// Event schema version. Can be used by client app to know how to parse the event
    #[serde(rename = "schema_version")]
    pub schema_version: String,
    /// Event severity
    #[serde(rename = "severity")]
    pub severity: String,
    /// Event status, Received, Stored
    #[serde(rename = "status")]
    pub status: String,
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
}

impl EventSchema {
    pub fn new(client_source: String, client_uuid: String, data: serde_json::Value, event_type: String, id: String, labels: serde_json::Value, schema_version: String, severity: String, status: String) -> EventSchema {
        EventSchema {
            client_source,
            client_uuid,
            created_at: None,
            data,
            event_type,
            id,
            labels,
            schema_version,
            severity,
            status,
            updated_at: None,
        }
    }
}


